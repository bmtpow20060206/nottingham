
/**
 * The MyALU. is the ALU of YOUR OWN design that provides the same functions as in the Nand2Tetris project + additional functions (and uses different control bits.
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y , x XOR y, x NXOR y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs


CHIP MyALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        C0, // Control Bit 0 (Least significant) 
        C1, // Control Bit 1
        C2, // Control Bit 2
        C3,  // Control Bit 3
	C4;  // Control Bit 4 (Most significant - 5th Control bit)
        

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
   // Put you code here:
	Arithmetic(x=x,y=y,c0=C0,c1=C1,c2=C2,c3=C3, out = arithmeticOut);
	Logical(x=x,y=y,c0=C0,c1=C1, out = logicalOut);

	Mux16(a = arithmeticOut, b = logicalOut, sel = C4, out = temp); //temp bcuz we need to check for status bit stuff

	//out = out lol
	And16(a = temp, b = true, out = out);

	statusBits(temp = temp, ng = ng, zg = zg); //The input name is temp because im lwk too lazy to change it back since i originally wrote it in here
												//Not being able to subbus is why i moved it to a different chip
}